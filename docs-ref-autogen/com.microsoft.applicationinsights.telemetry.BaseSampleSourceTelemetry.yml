### YamlMime:ManagedReference
items:
- uid: com.microsoft.applicationinsights.telemetry.BaseSampleSourceTelemetry
  id: BaseSampleSourceTelemetry
  parent: com.microsoft.applicationinsights.telemetry
  children:
  - com.microsoft.applicationinsights.telemetry.BaseSampleSourceTelemetry.reset()
  - com.microsoft.applicationinsights.telemetry.BaseSampleSourceTelemetry.setSampleRate(Envelope)
  href: com.microsoft.applicationinsights.telemetry.BaseSampleSourceTelemetry.yml
  langs:
  - java
  name: BaseSampleSourceTelemetry<T>
  nameWithType: BaseSampleSourceTelemetry<T>
  fullName: com.microsoft.applicationinsights.telemetry.BaseSampleSourceTelemetry<T>
  type: Class
  source:
    remote: &o0
      path: core/src/main/java/com/microsoft/applicationinsights/telemetry/BaseSampleSourceTelemetry.java
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-Java
    path: core/src/main/java/com/microsoft/applicationinsights/telemetry/BaseSampleSourceTelemetry.java
    startLine: 8
  package: com.microsoft.applicationinsights.telemetry
  summary: <p>Created by gupele on 12/4/2016. </p>
  syntax:
    content: public class BaseSampleSourceTelemetry<T extends Domain> extends BaseTelemetry<T> implements SupportSampling
    typeParameters:
    - id: T
      type: 8ce1ecb9
  inheritance:
  - java.lang.Object
  - com.microsoft.applicationinsights.telemetry.BaseTelemetry
  inheritedMembers:
  - com.microsoft.applicationinsights.telemetry.BaseTelemetry.additionalSanitize()
  - com.microsoft.applicationinsights.telemetry.BaseTelemetry.BaseTelemetry()
  - com.microsoft.applicationinsights.telemetry.BaseTelemetry.getBaseTypeName()
  - com.microsoft.applicationinsights.telemetry.BaseTelemetry.getContext()
  - com.microsoft.applicationinsights.telemetry.BaseTelemetry.getData()
  - com.microsoft.applicationinsights.telemetry.BaseTelemetry.getEnvelopName()
  - com.microsoft.applicationinsights.telemetry.BaseTelemetry.getProperties()
  - com.microsoft.applicationinsights.telemetry.SupportSampling.getSamplingPercentage()
  - com.microsoft.applicationinsights.telemetry.BaseTelemetry.getSequence()
  - com.microsoft.applicationinsights.telemetry.BaseTelemetry.getTimestamp()
  - com.microsoft.applicationinsights.telemetry.BaseTelemetry.initialize(ConcurrentMap<String, String>)
  - com.microsoft.applicationinsights.telemetry.BaseTelemetry.sanitize()
  - com.microsoft.applicationinsights.telemetry.BaseTelemetry.serialize(JsonTelemetryDataSerializer)
  - com.microsoft.applicationinsights.telemetry.SupportSampling.setSamplingPercentage(Double)
  - com.microsoft.applicationinsights.telemetry.BaseTelemetry.setSequence(String)
  - com.microsoft.applicationinsights.telemetry.BaseTelemetry.setTimestamp(Date)
- uid: com.microsoft.applicationinsights.telemetry.BaseSampleSourceTelemetry.reset()
  id: reset()
  parent: com.microsoft.applicationinsights.telemetry.BaseSampleSourceTelemetry
  href: com.microsoft.applicationinsights.telemetry.BaseSampleSourceTelemetry.yml
  langs:
  - java
  name: reset()
  nameWithType: BaseSampleSourceTelemetry<T>.reset()
  fullName: com.microsoft.applicationinsights.telemetry.BaseSampleSourceTelemetry<T extends Domain>.reset()
  overload: com.microsoft.applicationinsights.telemetry.BaseSampleSourceTelemetry.reset*
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/telemetry/BaseSampleSourceTelemetry.java
    startLine: 11
  package: com.microsoft.applicationinsights.telemetry
  syntax:
    content: public void reset()
- uid: com.microsoft.applicationinsights.telemetry.BaseSampleSourceTelemetry.setSampleRate(Envelope)
  id: setSampleRate(Envelope)
  parent: com.microsoft.applicationinsights.telemetry.BaseSampleSourceTelemetry
  href: com.microsoft.applicationinsights.telemetry.BaseSampleSourceTelemetry.yml
  langs:
  - java
  name: setSampleRate(Envelope envelope)
  nameWithType: BaseSampleSourceTelemetry<T>.setSampleRate(Envelope envelope)
  fullName: com.microsoft.applicationinsights.telemetry.BaseSampleSourceTelemetry<T extends Domain>.setSampleRate(Envelope envelope)
  overload: com.microsoft.applicationinsights.telemetry.BaseSampleSourceTelemetry.setSampleRate*
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/telemetry/BaseSampleSourceTelemetry.java
    startLine: 17
  package: com.microsoft.applicationinsights.telemetry
  syntax:
    content: protected void setSampleRate(Envelope envelope)
    parameters:
    - id: envelope
      type: ec5c4d5a
references:
- uid: 8ce1ecb9
  spec.java:
  - name: T
    fullName: T
- uid: com.microsoft.applicationinsights.telemetry.BaseSampleSourceTelemetry.reset*
  name: reset
  nameWithType: BaseSampleSourceTelemetry<T>.reset
  fullName: com.microsoft.applicationinsights.telemetry.BaseSampleSourceTelemetry<T extends Domain>.reset
  package: com.microsoft.applicationinsights.telemetry
- uid: ec5c4d5a
  spec.java:
  - name: Envelope
    fullName: Envelope
- uid: com.microsoft.applicationinsights.telemetry.BaseSampleSourceTelemetry.setSampleRate*
  name: setSampleRate
  nameWithType: BaseSampleSourceTelemetry<T>.setSampleRate
  fullName: com.microsoft.applicationinsights.telemetry.BaseSampleSourceTelemetry<T extends Domain>.setSampleRate
  package: com.microsoft.applicationinsights.telemetry
- uid: com.microsoft.applicationinsights.telemetry.BaseTelemetry.additionalSanitize()
  parent: com.microsoft.applicationinsights.telemetry.BaseTelemetry
  href: com.microsoft.applicationinsights.telemetry.BaseTelemetry.yml
  name: additionalSanitize()
  nameWithType: BaseTelemetry<T>.additionalSanitize()
  fullName: com.microsoft.applicationinsights.telemetry.BaseTelemetry<T extends Domain>.additionalSanitize()
  type: Method
  summary: <p>Concrete classes should implement this method </p>
  syntax:
    content: protected abstract void additionalSanitize()
    return:
      type: 5beb11ad
- uid: com.microsoft.applicationinsights.telemetry.BaseTelemetry.BaseTelemetry()
  parent: com.microsoft.applicationinsights.telemetry.BaseTelemetry
  href: com.microsoft.applicationinsights.telemetry.BaseTelemetry.yml
  name: BaseTelemetry()
  nameWithType: BaseTelemetry<T>.BaseTelemetry()
  fullName: com.microsoft.applicationinsights.telemetry.BaseTelemetry<T extends Domain>.BaseTelemetry()
  type: Constructor
  syntax:
    content: protected BaseTelemetry()
- uid: com.microsoft.applicationinsights.telemetry.BaseTelemetry.getBaseTypeName()
  parent: com.microsoft.applicationinsights.telemetry.BaseTelemetry
  href: com.microsoft.applicationinsights.telemetry.BaseTelemetry.yml
  name: getBaseTypeName()
  nameWithType: BaseTelemetry<T>.getBaseTypeName()
  fullName: com.microsoft.applicationinsights.telemetry.BaseTelemetry<T extends Domain>.getBaseTypeName()
  type: Method
  syntax:
    content: protected String getBaseTypeName()
    return:
      type: "26831127"
- uid: com.microsoft.applicationinsights.telemetry.BaseTelemetry.getContext()
  parent: com.microsoft.applicationinsights.telemetry.BaseTelemetry
  href: com.microsoft.applicationinsights.telemetry.BaseTelemetry.yml
  name: getContext()
  nameWithType: BaseTelemetry<T>.getContext()
  fullName: com.microsoft.applicationinsights.telemetry.BaseTelemetry<T extends Domain>.getContext()
  type: Method
  summary: >-
    <p>Gets the context associated with the current telemetry item.</p>

    <p></p>
  syntax:
    content: public TelemetryContext getContext()
    return:
      type: com.microsoft.applicationinsights.telemetry.TelemetryContext
      description: <p>The context </p>
- uid: com.microsoft.applicationinsights.telemetry.BaseTelemetry.getData()
  parent: com.microsoft.applicationinsights.telemetry.BaseTelemetry
  href: com.microsoft.applicationinsights.telemetry.BaseTelemetry.yml
  name: getData()
  nameWithType: BaseTelemetry<T>.getData()
  fullName: com.microsoft.applicationinsights.telemetry.BaseTelemetry<T extends Domain>.getData()
  type: Method
  summary: >-
    <p>Concrete classes should implement this method which supplies the data structure that this instance works with, which needs to implement <xref uid="com.microsoft.applicationinsights.telemetry.JsonSerializable" data-throw-if-not-resolved="false">JsonSerializable</xref></p>

    <p></p>
  syntax:
    content: protected abstract T getData()
    return:
      type: 521c6d27
      description: <p>The inner data structure </p>
- uid: com.microsoft.applicationinsights.telemetry.BaseTelemetry.getEnvelopName()
  parent: com.microsoft.applicationinsights.telemetry.BaseTelemetry
  href: com.microsoft.applicationinsights.telemetry.BaseTelemetry.yml
  name: getEnvelopName()
  nameWithType: BaseTelemetry<T>.getEnvelopName()
  fullName: com.microsoft.applicationinsights.telemetry.BaseTelemetry<T extends Domain>.getEnvelopName()
  type: Method
  syntax:
    content: protected String getEnvelopName()
    return:
      type: "26831127"
- uid: com.microsoft.applicationinsights.telemetry.BaseTelemetry.getProperties()
  parent: com.microsoft.applicationinsights.telemetry.BaseTelemetry
  href: com.microsoft.applicationinsights.telemetry.BaseTelemetry.yml
  name: getProperties()
  nameWithType: BaseTelemetry<T>.getProperties()
  fullName: com.microsoft.applicationinsights.telemetry.BaseTelemetry<T extends Domain>.getProperties()
  type: Method
  summary: >-
    <p>Gets a dictionary of application-defined property names and values providing additional information about this event.</p>

    <p></p>
  syntax:
    content: public Map<String, String> getProperties()
    return:
      type: 689c8cb5
      description: <p>The properties </p>
- uid: com.microsoft.applicationinsights.telemetry.SupportSampling.getSamplingPercentage()
  parent: com.microsoft.applicationinsights.telemetry.SupportSampling
  href: com.microsoft.applicationinsights.telemetry.SupportSampling.yml
  name: getSamplingPercentage()
  nameWithType: SupportSampling.getSamplingPercentage()
  fullName: com.microsoft.applicationinsights.telemetry.SupportSampling.getSamplingPercentage()
  type: Method
  syntax:
    content: public Double getSamplingPercentage()
    return:
      type: 8dd309d9
- uid: com.microsoft.applicationinsights.telemetry.BaseTelemetry.getSequence()
  parent: com.microsoft.applicationinsights.telemetry.BaseTelemetry
  href: com.microsoft.applicationinsights.telemetry.BaseTelemetry.yml
  name: getSequence()
  nameWithType: BaseTelemetry<T>.getSequence()
  fullName: com.microsoft.applicationinsights.telemetry.BaseTelemetry<T extends Domain>.getSequence()
  type: Method
  summary: >-
    <p>Sequence field used to track absolute order of uploaded events. It is a two-part value that includes a stable identifier for the current boot session and an incrementing identifier for each event added to the upload queue </p>

    <p>The Sequence helps track how many events were fired and how many events were uploaded and enables identification of data lost during upload and de-duplication of events on the ingress server. </p>

    <p>Gets the value that defines absolute order of the telemetry item.</p>

    <p></p>
  syntax:
    content: public String getSequence()
    return:
      type: "26831127"
      description: <p>The sequence of the Telemetry. </p>
- uid: com.microsoft.applicationinsights.telemetry.BaseTelemetry.getTimestamp()
  parent: com.microsoft.applicationinsights.telemetry.BaseTelemetry
  href: com.microsoft.applicationinsights.telemetry.BaseTelemetry.yml
  name: getTimestamp()
  nameWithType: BaseTelemetry<T>.getTimestamp()
  fullName: com.microsoft.applicationinsights.telemetry.BaseTelemetry<T extends Domain>.getTimestamp()
  type: Method
  summary: >-
    <p>Gets date and time when event was recorded.</p>

    <p></p>
  syntax:
    content: public Date getTimestamp()
    return:
      type: "12977444"
      description: <p>The timestamp as Date </p>
- uid: com.microsoft.applicationinsights.telemetry.BaseTelemetry.initialize(ConcurrentMap<String, String>)
  parent: com.microsoft.applicationinsights.telemetry.BaseTelemetry
  href: com.microsoft.applicationinsights.telemetry.BaseTelemetry.yml
  name: initialize(ConcurrentMap<String, String> properties)
  nameWithType: BaseTelemetry<T>.initialize(ConcurrentMap<String, String> properties)
  fullName: com.microsoft.applicationinsights.telemetry.BaseTelemetry<T extends Domain>.initialize(ConcurrentMap<String, String> properties)
  type: Method
  summary: >-
    <p>Initializes the instance with the context properties</p>

    <p></p>
  syntax:
    content: protected void initialize(ConcurrentMap<String, String> properties)
    parameters:
    - id: properties
      type: bc7a2f3a
      description: <p>The context properties </p>
- uid: com.microsoft.applicationinsights.telemetry.BaseTelemetry.sanitize()
  parent: com.microsoft.applicationinsights.telemetry.BaseTelemetry
  href: com.microsoft.applicationinsights.telemetry.BaseTelemetry.yml
  name: sanitize()
  nameWithType: BaseTelemetry<T>.sanitize()
  fullName: com.microsoft.applicationinsights.telemetry.BaseTelemetry<T extends Domain>.sanitize()
  type: Method
  summary: >-
    <p>

      <xrefsect id="deprecated_1_deprecated000001">

        <xreftitle>Deprecated</xreftitle>

        <xrefdescription>

          <p>Makes sure the data to send is sanitized from bad chars, proper length etc. </p>

        </xrefdescription>

      </xrefsect>

    </p>
  syntax:
    content: public void sanitize()
- uid: com.microsoft.applicationinsights.telemetry.BaseTelemetry.serialize(JsonTelemetryDataSerializer)
  parent: com.microsoft.applicationinsights.telemetry.BaseTelemetry
  href: com.microsoft.applicationinsights.telemetry.BaseTelemetry.yml
  name: serialize(JsonTelemetryDataSerializer writer)
  nameWithType: BaseTelemetry<T>.serialize(JsonTelemetryDataSerializer writer)
  fullName: com.microsoft.applicationinsights.telemetry.BaseTelemetry<T extends Domain>.serialize(JsonTelemetryDataSerializer writer)
  type: Method
  summary: >-
    <p>Serializes this object in JSON format.</p>

    <p></p>
  syntax:
    content: public void serialize(JsonTelemetryDataSerializer writer)
    parameters:
    - id: writer
      type: com.microsoft.applicationinsights.telemetry.JsonTelemetryDataSerializer
      description: <p>The writer that helps with serializing into Json format </p>
- uid: com.microsoft.applicationinsights.telemetry.SupportSampling.setSamplingPercentage(Double)
  parent: com.microsoft.applicationinsights.telemetry.SupportSampling
  href: com.microsoft.applicationinsights.telemetry.SupportSampling.yml
  name: setSamplingPercentage(Double samplingPercentage)
  nameWithType: SupportSampling.setSamplingPercentage(Double samplingPercentage)
  fullName: com.microsoft.applicationinsights.telemetry.SupportSampling.setSamplingPercentage(Double samplingPercentage)
  type: Method
  syntax:
    content: public void setSamplingPercentage(Double samplingPercentage)
    parameters:
    - id: samplingPercentage
      type: 8dd309d9
- uid: com.microsoft.applicationinsights.telemetry.BaseTelemetry.setSequence(String)
  parent: com.microsoft.applicationinsights.telemetry.BaseTelemetry
  href: com.microsoft.applicationinsights.telemetry.BaseTelemetry.yml
  name: setSequence(String sequence)
  nameWithType: BaseTelemetry<T>.setSequence(String sequence)
  fullName: com.microsoft.applicationinsights.telemetry.BaseTelemetry<T extends Domain>.setSequence(String sequence)
  type: Method
  summary: >-
    <p>Sets the value that defines absolute order of the telemetry item.</p>

    <p></p>
  syntax:
    content: public void setSequence(String sequence)
    parameters:
    - id: sequence
      type: "26831127"
      description: <p>The sequence of the Telemetry. </p>
- uid: com.microsoft.applicationinsights.telemetry.BaseTelemetry.setTimestamp(Date)
  parent: com.microsoft.applicationinsights.telemetry.BaseTelemetry
  href: com.microsoft.applicationinsights.telemetry.BaseTelemetry.yml
  name: setTimestamp(Date date)
  nameWithType: BaseTelemetry<T>.setTimestamp(Date date)
  fullName: com.microsoft.applicationinsights.telemetry.BaseTelemetry<T extends Domain>.setTimestamp(Date date)
  type: Method
  summary: >-
    <p>Sets date and time when event was recorded.</p>

    <p></p>
  syntax:
    content: public void setTimestamp(Date date)
    parameters:
    - id: date
      type: "12977444"
      description: <p>The timestamp as Date. </p>
- uid: com.microsoft.applicationinsights.telemetry.BaseTelemetry
  parent: com.microsoft.applicationinsights.telemetry
  href: com.microsoft.applicationinsights.telemetry.BaseTelemetry.yml
  name: BaseTelemetry<T>
  nameWithType: BaseTelemetry<T>
  fullName: com.microsoft.applicationinsights.telemetry.BaseTelemetry<T>
  type: Class
  summary: <p>Superclass for all telemetry data classes. </p>
  syntax:
    content: public class BaseTelemetry<T extends Domain>
    typeParameters:
    - id: T
      type: 8ce1ecb9
- uid: com.microsoft.applicationinsights.telemetry.SupportSampling
  parent: com.microsoft.applicationinsights.telemetry
  href: com.microsoft.applicationinsights.telemetry.SupportSampling.yml
  name: SupportSampling
  nameWithType: SupportSampling
  fullName: com.microsoft.applicationinsights.telemetry.SupportSampling
  type: Interface
  summary: <p>Created by gupele on 11/2/2016. </p>
  syntax:
    content: public interface SupportSampling
